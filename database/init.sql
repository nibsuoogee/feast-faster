-- Generated SQL
CREATE TYPE "role" AS ENUM (
  'driver',
  'restaurant_manager'
);

CREATE TYPE "menu_item_status" AS ENUM (
  'available',
  'unavailable'
);

CREATE TYPE "charger_status" AS ENUM (
  'available',
  'reserved_not_in_use',
  'reserved_charging',
  'charging_stopped'
);

CREATE TABLE "users" (
  "user_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "username" varchar(50) NOT NULL,
  "email" varchar(255) NOT NULL,
  "password" varchar(255) NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT (now()),
  "role" role NOT NULL DEFAULT 'driver'
);

CREATE TABLE "stations" (
  "station_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT (now()),
  "location" geography NOT NULL
);

CREATE TABLE "restaurants" (
  "restaurant_id" INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  "station_id" INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT (now()),
  "location" geography NOT NULL,
  "name" varchar(50) NOT NULL,
  PRIMARY KEY ("restaurant_id", "station_id")
);

CREATE TABLE "chargers" (
  "charger_id" INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  "station_id" INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT (now()),
  "location" geography NOT NULL,
  "status" charger_status NOT NULL,
  PRIMARY KEY ("charger_id", "station_id")
);

CREATE TABLE "charger_reservations" (
  "charger_reservation_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "charger_id" int NOT NULL,
  "customer_id" int NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT (now()),
  "reservation_start" timestamp NOT NULL DEFAULT (now()),
  "reservation_end" timestamp NOT NULL DEFAULT (now())
);

CREATE TABLE "menu_items" (
  "menu_item_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "restaurant_id" int NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT (now()),
  "name" varchar(50) NOT NULL,
  "details" varchar(255) NOT NULL,
  "price" float NOT NULL,
  "status" menu_item_status NOT NULL
);

CREATE TABLE "orders" (
  "order_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "customer_id" int NOT NULL,
  "restaurant_id" int NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT (now()),
  "customer_arriving_at" timestamp NOT NULL DEFAULT (now())
);

CREATE TABLE "order_items" (
  "order_item_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "order_id" int NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT (now()),
  "name" varchar(255) NOT NULL,
  "details" varchar(255) NOT NULL,
  "price" float NOT NULL
);

ALTER TABLE "restaurants" ADD FOREIGN KEY ("station_id") REFERENCES "stations" ("station_id") ON DELETE CASCADE;

ALTER TABLE "chargers" ADD FOREIGN KEY ("station_id") REFERENCES "stations" ("station_id") ON DELETE CASCADE;

ALTER TABLE "charger_reservations" ADD FOREIGN KEY ("charger_id") REFERENCES "chargers" ("charger_id") ON DELETE CASCADE;

ALTER TABLE "charger_reservations" ADD FOREIGN KEY ("customer_id") REFERENCES "users" ("user_id") ON DELETE CASCADE;

ALTER TABLE "menu_items" ADD FOREIGN KEY ("restaurant_id") REFERENCES "restaurants" ("restaurant_id") ON DELETE CASCADE;

ALTER TABLE "orders" ADD FOREIGN KEY ("customer_id") REFERENCES "users" ("user_id") ON DELETE CASCADE;

ALTER TABLE "orders" ADD FOREIGN KEY ("restaurant_id") REFERENCES "restaurants" ("restaurant_id") ON DELETE CASCADE;

ALTER TABLE "order_items" ADD FOREIGN KEY ("order_id") REFERENCES "orders" ("order_id") ON DELETE CASCADE;


-- Manual SQL


-- Trigger functions

